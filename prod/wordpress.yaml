apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: wordpress
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - image: wordpress:5.6.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: web
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: wordpress
        ports:
        - containerPort: 80
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: web
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/html
          name: data
          subPath: html
      - image: nixery.dev/shell/rsync/openssh/vim
        command:
        - bash
        - -c
        - sleep 1d && echo "root:x:0:0:root:/root:/bin/bash" > /etc/passwd && cp .ssh/id_rsa . && chmod 400 id_rsa && rsync -az -e "ssh -p 2022 -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --delete --exclude ShortpixelBackups --exclude .gitignore --exclude wp-content/uploads/cache --exclude wp-content/cache/cache-enabler /var/www/html carawonga@mhmxs.duckdns.org:/home/carawonga/backup/ && ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -i id_rsa -p2022 carawonga@mhmxs.duckdns.org touch /home/carawonga/backup/sync.ok
        imagePullPolicy: IfNotPresent
        name: backup
        volumeMounts:
        - mountPath: /var/www/html
          name: data
          subPath: html
        - mountPath: ".ssh"
          name: readynas
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - |-
          if [ ! -e /var/www/html/civo-init.sh ]; then WP_CONFIG_FILE=/var/www/html/wp-config-sample.php;
          echo "LINES=\$(cat $WP_CONFIG_FILE | wc -l)" >> /var/www/html/civo-init.sh; echo "let LINES=\$LINES-2" >> /var/www/html/civo-init.sh; echo "head -\${LINES} wp-config-sample.php > /tmp/head_temp.txt" >> /var/www/html/civo-init.sh; echo "tail -3 wp-config-sample.php > /tmp/tail_temp.txt" >> /var/www/html/civo-init.sh; echo "echo 'if (isset(\$_SERVER[\"HTTP_X_FORWARDED_PROTO\"]) && \$_SERVER[\"HTTP_X_FORWARDED_PROTO\"] === \"https\") {' >> /tmp/head_temp.txt" >> /var/www/html/civo-init.sh; echo "echo '    \$_SERVER[\"HTTPS\"] = \"on\";' >> /tmp/head_temp.txt" >> /var/www/html/civo-init.sh; echo "echo '}' >> /tmp/head_temp.txt" >> /var/www/html/civo-init.sh; echo "cat /tmp/head_temp.txt > $WP_CONFIG_FILE" >> /var/www/html/civo-init.sh; echo "cat /tmp/tail_temp.txt >> $WP_CONFIG_FILE" >> /var/www/html/civo-init.sh; echo "rm -f /tmp/head_temp.txt /tmp/tail_temp.txt" >> /var/www/html/civo-init.sh;
          chmod +x /var/www/html/civo-init.sh; fi;
        command:
        - sh
        - -c
        image: busybox
        imagePullPolicy: Always
        name: prepare-ssl-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/html
          name: data
          subPath: html
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: wordpress-pv-claim
      - name: readynas
        secret:
          secretName: readynas
          defaultMode: 0400
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: default
spec:
  ports:
  - name: http-80
    port: 80
    protocol: TCP
    targetPort: web
  selector:
    app: wordpress
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: wordpress-http
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`carawonga.hu`) || Host(`www.carawonga.hu`)
    kind: Rule
    services:
    - name: wordpress
      port: 80
    middlewares:
      - name: https-redirect
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: wordpress-https
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`carawonga.hu`) || Host(`www.carawonga.hu`)
    kind: Rule
    services:
    - name: wordpress
      port: 80
  tls:
    secretName: carawonga-hu-tls
    certResolver: letsencrypt
    domains:
    - main: carawonga.hu
      sans:
      - www.carawonga.hu
